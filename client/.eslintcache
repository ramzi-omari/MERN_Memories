[{"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/index.js":"1","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/App.js":"2","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Posts/Posts.js":"3","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Form/Form.js":"4","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Posts/Post/Post.js":"5","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/styles.js":"6","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Form/styles.js":"7","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Posts/Post/styles.js":"8","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Posts/styles.js":"9","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/reducers/index.js":"10","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/reducers/posts.js":"11","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/actions/posts.js":"12","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/api/index.js":"13"},{"size":565,"mtime":1611335430713,"results":"14","hashOfConfig":"15"},{"size":1571,"mtime":1611350558234,"results":"16","hashOfConfig":"15"},{"size":707,"mtime":1611347417959,"results":"17","hashOfConfig":"15"},{"size":3447,"mtime":1611355242270,"results":"18","hashOfConfig":"15"},{"size":2194,"mtime":1611358834875,"results":"19","hashOfConfig":"15"},{"size":350,"mtime":1611043913199,"results":"20","hashOfConfig":"15"},{"size":425,"mtime":1611044183030,"results":"21","hashOfConfig":"15"},{"size":963,"mtime":1611044208331,"results":"22","hashOfConfig":"15"},{"size":266,"mtime":1611044224569,"results":"23","hashOfConfig":"15"},{"size":181,"mtime":1611148704016,"results":"24","hashOfConfig":"15"},{"size":736,"mtime":1611358731009,"results":"25","hashOfConfig":"15"},{"size":1225,"mtime":1611358170219,"results":"26","hashOfConfig":"15"},{"size":444,"mtime":1611358067654,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ljzbx7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/index.js",[],["57","58"],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/App.js",[],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Posts/Posts.js",[],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Form/Form.js",[],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Posts/Post/Post.js",[],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/styles.js",[],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Form/styles.js",[],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Posts/Post/styles.js",[],["59","60"],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/components/Posts/styles.js",[],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/reducers/index.js",[],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/reducers/posts.js",["61"],"// we handle the logic for action here\n\nexport default (posts = [], action) => {\n  //posts = state and here we have just posts object\n  switch (action.type) {\n    case \"DELETE\":\n      // keep all the post except the one where the _id == action.payload\n      return posts.filter((post) => post._id !== action.payload);\n    case \"UPDATE\":\n      // return action.payload is the updated post\n      // return post without update\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case \"FETCH_ALL\":\n      return action.payload;\n    case \"CREATE\":\n      // spread prev posts and then place the new one\n      return [...posts, action.payload];\n\n    default:\n      return posts;\n  }\n};\n","/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/actions/posts.js",[],"/home/ram/Bureau/MERN Stack Memories/MERN-Stack-Memories/client/src/api/index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":1,"nodeType":"70","endLine":24,"endColumn":3},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],["71"],["72"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]